library(tidyverse)
library(fastDummies)

df <- read_csv("hospital_readmissions.csv")
library(tidyverse)
library(fastDummies)
df <- read_csv("hospital_readmissions.csv")
#renaming time_in_hospital to clarify amount of time
df <- df |>
rename("days_in_hospital" = "time_in_hospital")

#cleaning up age column
df <-  df |>
mutate(
age_clean = str_remove_all(age, "\\[|\\]|\\(|\\)")
)

#separate the min and max ages to formulate average age
df <- df |>
separate(age_clean, into = c("age_min", "age_max"), sep = "-", remove = TRUE) |>

# Convert to numeric and calculate midpoint
mutate(
age_min = as.integer(age_min),
age_max = as.integer(age_max),
age_numeric = (age_min + age_max) / 2
)

#the next section will be transforming the yes/no columns into 1/0 columns
df$change <- ifelse(df$change == "yes", 1, 0)
df$diabetes_med <- ifelse(df$diabetes_med == "yes", 1, 0)
df$readmitted <- ifelse(df$readmitted == "yes", 1, 0)

#changing the no/normal/high to 0,1,2 columns
df$glucose_test <- ifelse(df$glucose_test == "no", 0,
ifelse(df$glucose_test == "normal", 1,
ifelse(df$glucose_test == "high", 2, df$glucose_test)))
df$A1Ctest <- ifelse(df$A1Ctest == "no", 0,
ifelse(df$A1Ctest == "normal", 1,
ifelse(df$A1Ctest == "high", 2, df$A1Ctest)))

#removing age column and renaming age_numeric to age_median as age column is useless now
df <- df |>
select(-age) |>
rename("age_median" = "age_numeric")

#the next section will deal with the diagnoses columns to ensure that all data is integers (making it easier to plot) while also representing whether a diagnosis was primary(1), secondary(2), additional secondary(3) or never diagnosed(0)
# get all unique diagnoses across the three columns
all_diagnoses <- unique(c(df$diag_1, df$diag_2, df$diag_3))
all_diagnoses <- all_diagnoses[!is.na(all_diagnoses)]

# create columns for each diagnosis
for(diagnosis in all_diagnoses) {
df[[diagnosis]] <- 0  # Start with 0 (never diagnosed)

# set to 1 if it appears in diag_1
df[[diagnosis]][df$diag_1 == diagnosis & !is.na(df$diag_1)] <- 1

# set to 2 if it appears in diag_2
df[[diagnosis]][df$diag_2 == diagnosis & !is.na(df$diag_2)] <- 2

# set to 3 if it appears in diag_3
df[[diagnosis]][df$diag_3 == diagnosis & !is.na(df$diag_3)] <- 3
}

#remove original diagnoses columns
df <- df |>
select(-diag_1, -diag_2, -diag_3)

#now that the data is clean and prepared i will now plot to see if there are any correlations between the specialty of the admitting physician and whether the patient was readmitted
ggplot(df, aes(x = reorder(medical_specialty, readmitted), y = readmitted)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +  # Horizontal bars for better label readability
labs(title = "Readmission Rates by Medical Specialty",
x = "Medical Specialty of the Admitting Physician",
y = "Readmission Rate")

# creating a dataset with only the readmitted patients
re_df <- df %>%
filter(readmitted == 1)
View(re_df)

#now that the data is clean and prepared i will now plot to see if there are any correlations between the specialty of the admitting physician and whether the patient was readmitted
ggplot(re_df, aes(x = reorder(medical_specialty, readmitted), y = readmitted)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +  # Horizontal bars for better label readability
labs(title = "Readmission Rates by Medical Specialty",
x = "Medical Specialty of the Admitting Physician",
y = "Readmission Rate")

#Ignoring Missing as it is a huge outlier and probably represents multiple medical specialties, the next highest readmission rate is Internal Medicine
#First plotting Medical Specialty against number of inpatients to see if the large readmission rate is due to a higher number of patients in general
ggplot(re_df, aes(x = reorder(medical_specialty, n_inpatient), y = n_inpatient)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +  # Horizontal bars for better label readability
labs(title = "Number of patients by Medical Specialty",
x = "Medical Specialty of the Admitting Physician",
y = "Number of Patients")

#as suspected the readmission rate largely reflects the number of inpatients received by the medical specialties, meaning that the most likely reason for a department to have a higher readmission rate is that they see more patients
#Since there are much less outpatient patients represented in the dataset, plotting to see whether there is a higher readmission rate between outpatients or inpatients
ggplot(re_df, aes(x = reorder(n_outpatient, readmitted), y = readmitted)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +  # Horizontal bars for better label readability
labs(title = "Number of outpatients by Medical Specialty",
x = "Number of Outpatients",
y = "Readmission Rate")

#inpatient vs readmitted
ggplot(re_df, aes(x = reorder(n_inpatient, readmitted), y = readmitted)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +  # Horizontal bars for better label readability
labs(title = "Number of outpatients by Medical Specialty",
x = "Number of Inpatients",
y = "Readmission Rate")

#number of medications v readmitted
ggplot(re_df, aes(x = reorder(n_medications, readmitted), y = readmitted)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +  # Horizontal bars for better label readability
labs(title = "Number of outpatients by Medical Specialty",
x = "Number of Medications the Patient Took",
y = "Readmission Rate")

#number of medications v readmitted
ggplot(re_df, aes(x = n_medications, y = readmitted)) +
geom_bar(stat = "identity",aes(col = medical_specialty)) +
labs(title = "Number of Medications taken by the Patient vs Whether the Patient was Readmitted",
x = "Number of Medications the Patient Took",
y = "Number of Patients Readmitted")

#number of lab procedures v readmitted
ggplot(re_df, aes(x = n_lab_procedures, y = readmitted)) +
geom_bar(stat = "identity",aes(col = medical_specialty)) +
labs(title = "Number of Lab Procedures done by the Patient vs Whether the Patient was Readmitted",
x = "Number of Lab Procedures the Patient went through",
y = "Number of Patients Readmitted")

#number of non-lab procedures v readmitted
ggplot(re_df, aes(x = n_procedures, y = readmitted)) +
geom_bar(stat = "identity",aes(col = medical_specialty)) +
labs(title = "Number of non-lab Procedures done by the Patient vs Whether the Patient was Readmitted",
x = "Number of Procedures the Patient went through",
y = "Number of Patients Readmitted")

#number of emergency visits in the year prior v readmitted
ggplot(re_df, aes(x = n_emergency, y = readmitted)) +
geom_bar(stat = "identity",aes(col = medical_specialty)) +
labs(title = "Number of visits to the emergency room in the year before the hospital stay vs Whether the Patient was Readmitted",
x = "Number of Emergency Visits",
y = "Number of Patients Readmitted")

#glucose test results v readmitted
ggplot(re_df, aes(x = glucose_test, y = readmitted)) +
geom_bar(stat = "identity",aes(col = medical_specialty)) +
labs(title = "Result of Glucose Test vs Whether Patient was Readmitted",
x = "Glucose Test Result",
y = "Number of Patients Readmitted") +
scale_x_discrete(labels = c("0" = "Not Performed",
"1" = "Normal",
"2" = "High"))

#A1C test results v readmitted
ggplot(re_df, aes(x = A1Ctest, y = readmitted)) +
geom_bar(stat = "identity",aes(col = medical_specialty)) +
labs(title = "Result of A1C Test vs Whether Patient was Readmitted",
x = "A1C Test Result",
y = "Number of Patients Readmitted") +
scale_x_discrete(labels = c("0" = "Not Performed",
"1" = "Normal",
"2" = "High"))

#change in medicines v readmitted
ggplot(re_df, aes(x = factor(change), y = readmitted)) +
geom_bar(stat = "identity",aes(col = medical_specialty)) +
labs(title = "Whether there was a change in Diabetes Medication vs Whether Patient was Readmitted",
x = "Change in Diabetes Medication",
y = "Number of Patients Readmitted") +
scale_x_discrete(breaks = c(0, 1), labels = c("No Change", "Change"))

#whether patient took diabetes meds v readmitted
ggplot(re_df, aes(x = factor(diabetes_med), y = readmitted)) +
geom_bar(stat = "identity",aes(col = medical_specialty)) +
labs(title = "Whether there was Diabetes Medication were prescribed vs Whether Patient was Readmitted",
x = "Diabetes Medication",
y = "Number of Patients Readmitted") +
scale_x_discrete(breaks = c(0, 1), labels = c("Not Prescribed", "Prescribed"))
